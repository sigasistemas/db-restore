<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('restore_filters', function (Blueprint $table) {
            if (config('db-restore.incrementing', false)) {
                $table->id();
                $table->unsignedBigInteger('user_id')->nullable();
                $table->unsignedBigInteger('tenant_id')->nullable();
            } else {
                $table->ulid('id')->primary();
                $table->ulid('user_id')->nullable();
                $table->ulid('tenant_id')->nullable();
            }
            $table->string('name')->comment('Nome do filtro');
            $table->string('slug')->unique()->comment('Slug do filtro');
            $table->string('column')->comment('Coluna do filtro');
            $table->string('operator')->comment('Operador do filtro');
            $table->string('value')->comment('Valor do filtro');
            $table->enum('type', ['create', 'update', 'delete', 'restore', 'list'])->default('list')->comment('Tipo do filtro');
            if (config('db-restore.incrementing', false)) {
                $table->morphs('filterable');
            } else {
                $table->ulidMorphs('filterable');
            }
            $table->enum('status', ['draft', 'published'])->default('published')->comment('Status da restauração');
            $table->text('description')->nullable()->comment('Descrição da restauração');
            $table->timestamps();
            $table->softDeletes();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('restore_filters');
    }
};
